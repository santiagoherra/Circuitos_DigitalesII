$date
	Fri May 17 15:26:53 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb $end
$var wire 1 ! entregar_dinero $end
$var wire 1 " fondos_insuficientes $end
$var wire 1 # tipo_trans $end
$var wire 1 $ tipo_de_tarjeta $end
$var wire 1 % tarjeta_recibida $end
$var wire 1 & rst $end
$var wire 1 ' pin_incorrecto $end
$var wire 16 ( pin [15:0] $end
$var wire 1 ) monto_stb $end
$var wire 32 * monto [31:0] $end
$var wire 1 + digito_stb $end
$var wire 4 , digito [3:0] $end
$var wire 1 - comision $end
$var wire 1 . clk $end
$var wire 1 / bloqueo $end
$var wire 1 0 balance_actualizado $end
$var wire 1 1 advertencia $end
$scope module DUT $end
$var wire 1 # tipo_trans $end
$var wire 1 $ tipo_de_tarjeta $end
$var wire 1 % tarjeta_recibida $end
$var wire 1 & rst $end
$var wire 16 2 pin [15:0] $end
$var wire 1 ) monto_stb $end
$var wire 32 3 monto [31:0] $end
$var wire 1 + digito_stb $end
$var wire 4 4 digito [3:0] $end
$var wire 1 . clk $end
$var reg 1 1 advertencia $end
$var reg 64 5 balance [63:0] $end
$var reg 1 0 balance_actualizado $end
$var reg 1 / bloqueo $end
$var reg 1 6 coincidencia $end
$var reg 1 - comision $end
$var reg 3 7 contador_digitos [2:0] $end
$var reg 3 8 contador_fallos [2:0] $end
$var reg 3 9 correcto [2:0] $end
$var reg 1 : entregar_dinero $end
$var reg 1 ; fondos_insuficientes $end
$var reg 1 ' pin_incorrecto $end
$scope begin $ivl_for_loop0 $end
$var integer 32 < i [31:0] $end
$upscope $end
$upscope $end
$scope module test $end
$var wire 1 1 advertencia $end
$var wire 1 0 balance_actualizado $end
$var wire 1 / bloqueo $end
$var wire 1 - comision $end
$var wire 1 ' pin_incorrecto $end
$var reg 1 . clk $end
$var reg 4 = digito [3:0] $end
$var reg 1 + digito_stb $end
$var reg 1 > entregar_dinero $end
$var reg 1 ? fondos_insuficientes $end
$var reg 32 @ monto [31:0] $end
$var reg 1 ) monto_stb $end
$var reg 16 A pin [15:0] $end
$var reg 1 & rst $end
$var reg 1 % tarjeta_recibida $end
$var reg 1 $ tipo_de_tarjeta $end
$var reg 1 # tipo_trans $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 A
b0 @
0?
0>
b0 =
bx <
x;
x:
bx 9
bx 8
bx 7
x6
b1100001101010000 5
b0 4
b0 3
b0 2
x1
x0
x/
0.
0-
b0 ,
0+
b0 *
0)
b0 (
x'
1&
0%
0$
x#
x"
x!
$end
#5
b0 9
b0 8
b0 7
01
0/
0'
0"
0;
0!
0:
00
06
1.
#10
0.
#15
1.
#20
0.
b1101010011011101 (
b1101010011011101 2
b1101010011011101 A
0&
#25
1.
#30
1-
0.
1$
1%
#35
1.
#40
0.
#45
1.
#50
0.
#55
1.
b1101 ,
b1101 4
b1101 =
#60
0.
#65
16
b1 9
b100 <
b1 7
1.
1+
#70
0.
#75
1.
0+
#80
0.
#85
1.
b100 ,
b100 4
b100 =
#90
0.
#95
b10 9
b100 <
16
b10 7
1.
1+
#100
0.
#105
1.
0+
#110
0.
#115
1.
b1101 ,
b1101 4
b1101 =
#120
0.
#125
b11 9
b100 <
16
b11 7
1.
1+
#130
0.
#135
1.
0+
#140
0.
#145
1.
#150
0.
#155
b100 9
b100 <
16
b100 7
1.
1+
#160
0.
#165
1.
0+
#170
0.
#175
1.
b100111000100000 *
b100111000100000 3
b100111000100000 @
0#
#180
0.
#185
10
b10001000101110000 5
1.
1)
#190
0.
#195
1.
0)
#200
0.
#205
1.
#210
0.
#215
1.
#220
0.
#225
1.
#230
0.
#235
b0 9
b0 7
00
06
0-
1.
0$
0%
b0 *
b0 3
b0 @
b0 ,
b0 4
b0 =
1&
#240
0.
#245
1.
0&
#250
0.
#255
1.
#260
0.
#265
1.
1%
#270
0.
#275
1.
#280
0.
#285
1.
#290
0.
b1101 ,
b1101 4
b1101 =
#295
1.
#300
16
b1 9
b100 <
b1 7
0.
1+
#305
1.
#310
0.
0+
#315
1.
#320
0.
b100 ,
b100 4
b100 =
#325
1.
#330
b10 9
b100 <
16
b10 7
0.
1+
#335
1.
#340
0.
0+
#345
1.
#350
0.
b1101 ,
b1101 4
b1101 =
#355
1.
#360
b11 9
b100 <
16
b11 7
0.
1+
#365
1.
#370
0.
0+
#375
1.
#380
0.
#385
1.
#390
b100 9
b100 <
16
b100 7
0.
1+
#395
1.
#400
0.
0+
#405
1.
#410
0.
b100111000100000 *
b100111000100000 3
b100111000100000 @
1#
#415
1.
#420
x!
1:
10
b1100001101010000 5
0.
1)
#425
1.
#430
0.
0)
#435
1.
#440
0.
#445
1.
#450
0.
#455
1.
#460
0.
#465
1.
#470
0.
0%
b0 *
b0 3
b0 @
b0 ,
b0 4
b0 =
1&
#475
b0 9
b0 7
0!
0:
00
06
1.
#480
0.
0&
#485
1.
#490
0.
#495
1.
#500
0.
1%
#505
1.
#510
0.
#515
1.
#520
0.
#525
1.
b1001 ,
b1001 4
b1001 =
#530
0.
#535
b100 <
b1 7
1.
1+
#540
0.
#545
1.
0+
#550
0.
#555
1.
b0 ,
b0 4
b0 =
#560
0.
#565
b100 <
b10 7
1.
1+
#570
0.
#575
1.
0+
#580
0.
#585
1.
b1001 ,
b1001 4
b1001 =
#590
0.
#595
b100 <
b11 7
1.
1+
#600
0.
#605
1.
0+
#610
0.
#615
b0 7
1.
1&
#620
0.
#625
1.
#630
0.
#635
1.
#640
0.
#645
1.
#650
0.
#655
1.
#660
0.
#665
1.
